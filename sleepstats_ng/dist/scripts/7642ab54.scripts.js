"use strict";function generateChartData(a,b,c,d,e){return{chart:{renderTo:"container",defaultSeriesType:"column",backgroundColor:"#eee",borderWidth:1,borderColor:"#ccc",plotBackgroundColor:"#fff",plotBorderWidth:1,plotBorderColor:"#ccc"},credits:{enabled:!1},exporting:{enabled:!1},title:{text:a},legend:{},tooltip:{borderWidth:1,formatter:e},plotOptions:{column:{shadow:!1,borderWidth:.5,borderColor:"rgba(76,191,191,1)",pointPadding:0,groupPadding:0,color:"rgba(76,191,191,.65)",animation:!1},spline:{shadow:!1,marker:{radius:1}},areaspline:{color:"rgba(76,191,191,1)",fillColor:"rgba(76,191,191,.65)",shadow:!1,marker:{radius:1}}},xAxis:{categories:b,labels:{rotation:-90,y:40,style:{fontSize:"8px",fontWeight:"normal",color:"#333"}},lineWidth:0,lineColor:"#999",tickLength:70,tickColor:"#ccc"},yAxis:{title:{text:""},gridLineColor:"#e9e9e9",tickWidth:1,tickLength:3,tickColor:"#ccc",lineColor:"#ccc",tickInterval:d},series:[{name:"Bins",data:c},{name:"Curve",type:"spline",visible:!1,data:c},{name:"Filled Curve",type:"areaspline",visible:!1,data:c}]}}function timeSeriesToDistribution(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o;for(c=_.groupBy(a,function(a){return a.value}),c=_.sortBy(c,function(a){return parseInt(a[0].value,10)}),d=_.map(c,function(a){return parseInt(a[0].value,10)}),e=_.map(c,function(a){return a.length}),f=_.min(d),g=_.max(d),h={},i=g-f,j=1>i/b?1:Math.floor((g-f)/b)+1,k=0;j>k;k++)for(m=f+b*k,n=m+b-1,o=m+"-"+n,h[o]=0,l=0;l<d.length;l++)d[l]>=m&&d[l]<=n&&(h[o]+=e[l]);return h=_.sortBy(_.pairs(h),function(a){return parseInt(a[0].match(/^(\d+)-/)[1],10)}),d=_.map(h,function(a){return a[0]}),e=_.map(h,function(a){return a[1]}),[d,e]}function minutesToHours(a){var b;return b=parseInt(a,10)/60,b=Math.round(10*b)/10}function showChart(a,b,c,d,e,f){var g,h,i,j;h=timeSeriesToDistribution(c,e),i=h[0],j=h[1],"Hours"===f.units&&(i=_.map(i,function(a){var b,c,d,e;return b=/(\d*)-(\d*)/.exec(a),c=minutesToHours(b[1]),d=minutesToHours(b[2]),e=c+" - "+d})),g=generateChartData(d,i,j,1,f),$(b).highcharts(g)}angular.module("sleepstatsApp",[]).config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/stats.html",controller:"StatsCtrl"}).otherwise({redirectTo:"/"})}]).value("apis",{urls:{fitbit:{sleepAwakenings:"/fitbit/sleepAwakenings",sleepTimeToSleep:"/fitbit/sleepTimeToSleep",sleepTimeInBed:"/fitbit/sleepTimeInBed",auth:"/fitbit/authorize"}}}),angular.module("sleepstatsApp").controller("StatsCtrl",["$scope","$http","$filter","$q","apis","$window",function(a,b,c,d,e,f){a.switchGraph=function(b){a.graphType=b},a.getData=function(){var g,h,i;return i=/^\d\d\d\d-\d\d-\d\d$/,g=c("parseDate")(a.from),h=c("parseDate")(a.to),!a.dateSelect.$error.required&&i.test(g)&&i.test(h)?(a.dataLoading=!0,a.dataLoaded=!1,d.all([b.get(e.urls.fitbit.sleepAwakenings+"/"+g+"/"+h),b.get(e.urls.fitbit.sleepTimeToSleep+"/"+g+"/"+h),b.get(e.urls.fitbit.sleepTimeInBed+"/"+g+"/"+h)]).then(function(b){a.awakenings=b[0].data["sleep-awakeningsCount"],a.timeToSleep=b[1].data["sleep-minutesToFallAsleep"],a.timeInBed=b[2].data["sleep-timeInBed"],a.updateUI(),ga("send","event","API-"+window.location.host,"Response 200")},function(b){b.status&&401===b.status&&(f.location.href=e.urls.fitbit.auth),a.updateUI()}),void 0):!1},a.updateUI=function(){a.dataLoading=!1,a.dataLoaded=!0},a.dataLoaded=!1,a.graphType="awakenings"}]),angular.module("sleepstatsApp").directive("highchart",function(){return{template:"<div></div>",restrict:"A",link:function(a,b,c){var d,e;e=function(a){return"<b>"+a+":</b><br/> "+this.x+"<br/>"+"<b>Count:</b> "+this.y},e=_.partial(e,c.units),e.units=c.units,d=a[c.highchart],d&&("true"===c.nozeros&&(d=_.reject(d,function(a){return"0"===a.value})),showChart(c.highchart,b,d,c.title,parseInt(c.bucketsize,10),e))}}}),angular.module("sleepstatsApp").filter("parseDate",function(){return function(a,b){var c,d;return c="yyyy-MM-dd",d=Date.parse(a),d?d.toString(c):'e.g. "'+b+'"'}});